import { useState } from "react";
import Button from "../components/ui/Button";
import AvatarEditorModal from "../components/profile/AvatarEditorModal";
import { FormField } from "../components/profile/FormField";
import { SelectField } from "../components/profile/SelectField";
import { SecurityOption } from "../components/profile/SecurityOption";

export default function Profile() {
  const [isAvatarModalOpen, setIsAvatarModalOpen] = useState(false);
  const [user, setUser] = useState({
    name: "Alex Johnson",
    email: "alex.johnson@example.com",
    avatar: "/default-avatar.png",
    joinedDate: "January 2023",
    currency: "USD",
    timezone: "America/New_York",
    language: "English",
    twoFactorEnabled: false,
  });

  return (
    <div className="min-h-screen bg-background text-text">
      {/* Header */}
      <div className="bg-surface border-b border-border/50 p-4 sm:p-6">
        <div className="max-w-7xl mx-auto">
          <h1 className="text-2xl font-semibold">Profile Settings</h1>
        </div>
      </div>

      {/* Main Content */}
      <main className="max-w-7xl mx-auto p-4 sm:p-6">
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
          {/* Profile Card (1/3 width) */}
          <div className="lg:col-span-1">
            <div className="bg-surface border border-border/50 rounded-lg p-6 sticky top-6">
              <div className="flex flex-col items-center">
                <div className="relative group">
                  <img
                    src={user.avatar}
                    alt="Profile"
                    className="w-32 h-32 rounded-full object-cover border-4 border-primary/10"
                  />
                  <button
                    onClick={() => setIsAvatarModalOpen(true)}
                    className="absolute inset-0 bg-black/50 rounded-full opacity-0 group-hover:opacity-100 flex items-center justify-center transition-opacity"
                  >
                    <CameraIcon className="h-6 w-6 text-surface" />
                  </button>
                </div>
                <h2 className="mt-4 text-xl font-semibold">{user.name}</h2>
                <p className="text-text-muted">{user.email}</p>
                <p className="text-sm text-text-muted mt-2">Member since {user.joinedDate}</p>
              </div>
            </div>
          </div>

          {/* Settings Form (2/3 width) */}
          <div className="lg:col-span-2">
            <div className="bg-surface border border-border/50 rounded-lg overflow-hidden">
              <div className="p-4 border-b border-border/50">
                <h2 className="font-medium">Account Information</h2>
              </div>

              <div className="p-6 space-y-6">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <FormField
                    label="Full Name"
                    value={user.name}
                    onChange={(e) => setUser({ ...user, name: e.target.value })}
                  />
                  <FormField
                    label="Email"
                    type="email"
                    value={user.email}
                    onChange={(e) => setUser({ ...user, email: e.target.value })}
                  />
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <SelectField
                    label="Currency"
                    value={user.currency}
                    options={["USD", "EUR", "GBP", "JPY"]}
                    onChange={(e) => setUser({ ...user, currency: e.target.value })}
                  />
                  <SelectField
                    label="Timezone"
                    value={user.timezone}
                    options={["America/New_York", "Europe/London", "Asia/Tokyo"]}
                    onChange={(e) => setUser({ ...user, timezone: e.target.value })}
                  />
                </div>

                <SelectField
                  label="Language"
                  value={user.language}
                  options={["English", "Spanish", "French", "German"]}
                  onChange={(e) => setUser({ ...user, language: e.target.value })}
                />

                <div className="pt-4 border-t border-border/50 flex justify-end">
                  <Button>Save Changes</Button>
                </div>
              </div>
            </div>

            {/* Security Section */}
            <div className="mt-6 bg-surface border border-border/50 rounded-lg overflow-hidden">
              <div className="p-4 border-b border-border/50">
                <h2 className="font-medium">Security</h2>
              </div>
              <div className="p-6 space-y-4">
                <SecurityOption
                  title="Two-Factor Authentication"
                  description="Add an extra layer of security to your account"
                  actionText={user.twoFactorEnabled ? "Disable" : "Enable"}
                  onClick={() => {}}
                />
                <SecurityOption
                  title="Change Password"
                  description="Update your account password"
                  actionText="Change"
                  onClick={() => {}}
                />
              </div>
            </div>
          </div>
        </div>
      </main>

      {/* Avatar Editor Modal */}
      <AvatarEditorModal
        isOpen={isAvatarModalOpen}
        onClose={() => setIsAvatarModalOpen(false)}
        onSave={(newAvatar) => setUser({ ...user, avatar: newAvatar })}
      />
    </div>
  );
}

function CameraIcon({ className }: { className?: string }) {
  return (
    <svg className={className} fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth="2"
        d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"
      />
      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M15 13a3 3 0 11-6 0 3 3 0 016 0z" />
    </svg>
  );
}
